{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "image_generator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-07T01:41:55.868Z",
  "id": "IzlNF85cByPLdPfz",
  "isArchived": false,
  "meta": null,
  "name": "MKT_draMiranda",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "#Role\nYou are an expert in creating specific prompts to create images for Aesthetic Medicine marketing.\n\n#Activities\n1) say hello and request the post content to create\n\n2) Based on the post content define the proper image to create, create a text to be used as a prompt with: the image context, the proper color palette: soft, vivid, grayscale, or black-and-white and the resolution and professional style (e.g. imagine smiling patient before_and_after collage, subtle transformation spotlight, serene and confident mood, soft pastel palette, ultra-high-resolution, professional dental-aesthetic branding)\n\n3) Present and validate the prompt to the user, if it's no ok re generate the prompt. If the user confirm go to step 4\n\n4) With this prompt call the tool image_generator and get all the fields about URL the tool will generate. \n\n5) Ask the email of the user\n\n6) Present a clickable link with the URL Stream of the image (from image_generator) to the user (always use the URL Stream)\n\n7) Use the email tool to send the prompt created and the clickable link and the Stream URL in the body of the message (format the email body to separate the prompt and the image URL and maintain a gently tone). At the end of the body add the link of the chat to get another request.\n\n\n##Conditions\n- use simple text on a prompt field to call the tool image_generator"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        224,
        0
      ],
      "id": "53e98089-ad35-4e2b-8aca-e301ff1f8c32",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        192
      ],
      "id": "f6bd1fbf-2b4b-4e7e-9940-837642e3a667",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "description": "Call this tool to generate images",
        "workflowId": {
          "__rl": true,
          "value": "j9YqroqOiezsOQfU",
          "mode": "list",
          "cachedResultName": "Sub_imageGen"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prompt', `the prompt generated by the agent to be used to create the image`, 'string') }}"
          },
          "matchingColumns": [
            "aprompt"
          ],
          "schema": [
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        544,
        208
      ],
      "id": "365854de-bc5d-4037-8ca7-b8e766180add",
      "name": "image_generator"
    },
    {
      "parameters": {
        "content": "Image Creation"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        448,
        160
      ],
      "id": "d1f3f910-94c4-4cc8-b183-d917bb0e7ad0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "send_email"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        704,
        160
      ],
      "id": "e6aac687-2497-401e-a8cd-105d681a0820",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Prompt Creation",
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -48,
        160
      ],
      "id": "f689d159-8495-40b6-9318-ad072a1cecb8",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        800,
        208
      ],
      "id": "ca659e7c-2e1a-470c-8a23-f049d501ce41",
      "name": "Gmail",
      "webhookId": "ed31facf-9f52-4608-9fa4-e6deb0cb03d2"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "354c507c-d217-410a-ba3e-c7d53ebdb49b",
      "name": "Telegram Trigger",
      "webhookId": "a9d2d9a7-2509-4c8a-8ec0-b7712f22d816",
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        592,
        0
      ],
      "id": "274b75da-73de-44e5-a4dc-824902b3a527",
      "name": "Telegram",
      "webhookId": "ee90d096-7be3-4c9d-b5f3-a6ebe6287a77"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        288,
        192
      ],
      "id": "1fa7c36e-a9fb-40e7-92be-5d6afe2266ee",
      "name": "Simple Memory"
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "cabobadilla",
    "name": "backup-n8n"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-07T01:41:55.868Z",
      "updatedAt": "2025-09-07T01:41:55.868Z",
      "role": "workflow:owner",
      "workflowId": "IzlNF85cByPLdPfz",
      "projectId": "EMKC3HvbWexR6hSv"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-07T01:42:45.770Z",
  "versionId": "1bcff47a-4b7c-45d6-aebb-5e83fd312cd6"
}