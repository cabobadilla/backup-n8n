{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Search Reddit - n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Reddit - n8n": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Email Content": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Format Email Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-07T01:40:26.028Z",
  "id": "ExFBa8k988EJX7jP",
  "isArchived": false,
  "meta": null,
  "name": "News_Reddit",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "9d7d2465-f958-473d-94bf-fba90bcb5c1c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "n8n workflow OR n8n automation OR n8n tricks OR n8n tips OR n8n nodes OR n8n integration OR agents",
        "limit": 20,
        "additionalFields": {}
      },
      "id": "326c3765-6a5e-43a7-8cfc-e2a3bae7db67",
      "name": "Search Reddit - n8n",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        256,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "const posts = $input.all();\nlet emailContent = `\n<h2>Daily n8n Reddit Digest - ${new Date().toLocaleDateString()}</h2>\n<p>Here are the best n8n-related posts from Reddit in the last 24 hours:</p>\n<hr>\n`;\n\nif (posts.length === 0) {\n  emailContent += '<p>No high-quality n8n posts found today.</p>';\n} else {\n  posts.forEach((item, index) => {\n    const post = item.json;\n    const postUrl = `https://reddit.com${post.permalink}`;\n    const score = post.score || 0;\n    const numComments = post.num_comments || 0;\n\n    // Additional evaluation\n    let scoreCategory = \"low\";\n    if (score >= 1000) {\n      scoreCategory = \"high\";\n    } else if (score >= 500) {\n      scoreCategory = \"medium\";\n    }\n    const isPopular = score >= 1000 || numComments >= 100;\n\n    emailContent += `\n    <div style=\"margin-bottom: 30px; padding: 15px; border: 1px solid #eee; border-radius: 8px;\">\n      <h3 style=\"color: #1a73e8;\">${index + 1}. ${post.title}</h3>\n      <p><strong>Subreddit:</strong> r/${post.subreddit} | <strong>Score:</strong> ${score} (<b>${scoreCategory}</b>) | <strong>Comments:</strong> ${numComments}</p>\n      <p><strong>Popular:</strong> ${isPopular ? \"✅ Yes\" : \"❌ No\"}</p>\n      <p><strong>Author:</strong> u/${post.author} | <strong>Posted:</strong> ${new Date(post.created_utc * 1000).toLocaleString()}</p>\n      <p style=\"color: #555;\">${post.selftext ? post.selftext.substring(0, 300) + (post.selftext.length > 300 ? '...' : '') : 'No description available'}</p>\n      <p><a href=\"${postUrl}\" style=\"color: #1a73e8; text-decoration: none; font-weight: bold;\">Read Full Post →</a></p>\n    </div>\n    `;\n  });\n}\n\nemailContent += `\n<hr>\n<p style=\"color: #666; font-size: 12px; text-align: center;\">This digest was automatically generated by n8n workflow.</p>\n`;\n\nreturn [{\n  json: {\n    emailContent: emailContent,\n    postCount: posts.length,\n    subject: `Daily n8n Reddit Digest - ${new Date().toLocaleDateString()} (${posts.length} posts)`\n  }\n}];\n"
      },
      "id": "0e8af665-5540-49cd-b3a4-39a8efe4719f",
      "name": "Format Email Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        0
      ]
    },
    {
      "parameters": {
        "sendTo": "cbobadilla.dsoft@gmail.com",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.emailContent }}",
        "options": {}
      },
      "id": "7ace185b-42c2-42ee-a9b3-879b19c17e87",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        928,
        0
      ],
      "webhookId": "e3f2a6ab-ed8e-404b-b3c8-4eb7233f89f8",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9ec7560b-2ed4-480a-b732-966d3f80cd95",
              "leftValue": "={{ $json.created }}",
              "rightValue": "={{ Math.floor(new Date($('Schedule Trigger').item.json.timestamp).getTime() / 1000) - 86400 }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "1095f962-9259-4654-b99d-077f7cfd91ea",
              "leftValue": "={{ $json.score }}",
              "rightValue": 100,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "29ef9a39-1d30-47a7-8fc6-84824b27ec62",
              "leftValue": "={{ $json.num_comments }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        464,
        0
      ],
      "id": "07c35d85-0389-4b98-8b26-59a8f8f78639",
      "name": "Filter"
    }
  ],
  "origin": "n8n",
  "pinData": {
    "Schedule Trigger": [
      {
        "json": {
          "timestamp": "2025-08-03T08:56:25.259-04:00",
          "Readable date": "August 3rd 2025, 8:56:25 am",
          "Readable time": "8:56:25 am",
          "Day of week": "Sunday",
          "Year": "2025",
          "Month": "August",
          "Day of month": "03",
          "Hour": "08",
          "Minute": "56",
          "Second": "25",
          "Timezone": "America/New_York (UTC-04:00)"
        }
      }
    ]
  },
  "repo": {
    "owner": "cabobadilla",
    "name": "backup-n8n"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-07T01:40:26.028Z",
      "updatedAt": "2025-09-07T01:40:26.028Z",
      "role": "workflow:owner",
      "workflowId": "ExFBa8k988EJX7jP",
      "projectId": "EMKC3HvbWexR6hSv"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-07T01:40:26.028Z",
  "versionId": "f07bf6d5-b1e7-4b95-b708-7891e5c79bc5"
}